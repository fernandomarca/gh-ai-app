name: ghelere-ai

services:
  app:
    container_name: rag-app
    build: 
      context: ../.
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      DB_VENDOR: "postgres"
      DB_USER: "postgres"
      DB_PASSWORD: "123456"
      DB_HOST: "rag-db"	
      DB_PORT: "5432"
      DB_NAME: "postgres"
      OLLAMA_HOST: "ollama"
      OLLAMA_PORT: "11434"
    networks:
      - ai-dev-services
  
  nginx:
    container_name: ghelere-nginx
    image: nginx:latest
    restart: unless-stopped
    ports:
      - "8080:80"
      - "2443:443"
      - "80:80"
      - "443:443"
    volumes:
      - ./.docker/nginx/nginx.conf:/etc/nginx/nginx.conf/:ro
      - ./.docker/nginx/certbot/www:/var/www/certbot/:ro
      - ./.docker/nginx/certbot/conf/:/etc/nginx/ssl/:ro
      # - ./.docker/nginx/99-autoreload.sh:/docker-entrypoint.d/99-autoreload.sh
    networks:
      - ai-dev-services

  certbot:
    container_name: ghelere-certbot
    image: certbot/certbot:latest
    ports:
    - "80:80"
    - "443:443"
    volumes:
      - ./.docker/nginx/certbot/www:/var/www/certbot/:rw
      - ./.docker/nginx/certbot/conf/:/etc/letsencrypt/:rw
    # entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  db:
    container_name: rag-db
    build: 
      context: .docker/postgres
      dockerfile: Dockerfile
    ports:
      - "5432:5432"
    volumes:
      - .docker/pgdata:/var/lib/postgresql/data/pgdata
    networks:
      - ai-dev-services
    security_opt:
      - seccomp:unconfined
    environment:
      POSTGRES_PASSWORD: "123456"
      POSTGRES_USER: "postgres"
      POSTGRES_DB: "postgres"
      PGDATA: /var/lib/postgresql/data/pgdata

  ollama:
    image: ollama/ollama
    container_name: ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama:/root/.ollama
    networks:
      - ai-dev-services
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

volumes:
  ollama:

networks:
  ai-dev-services:
    external: true